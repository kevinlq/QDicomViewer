/****************************************************************************
**
** Copyright (C) 2016 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of Qbs.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \contentspage index.html
    \page jsextension-fileinfo.html
    \ingroup list-of-builtin-services

    \title FileInfo Service
    \brief Provides operations on file paths.

    The \c FileInfo service offers various operations on file paths, such as turning absolute
    paths into relative ones, splitting a path into its components, and so on.

    \section1 Available Operations

    \section2 baseName
    \code
    FileInfo.baseName(filePath: string): string
    \endcode
    Returns the file name of \c filePath up to (but not including) the first '.' character.

    \section2 completeBaseName
    \code
    FileInfo.completeBaseName(filePath: string): string
    \endcode
    Returns the file name of \c filePath up to (but not including) the last '.' character.

    \section2 fileName
    \code
    FileInfo.fileName(filePath: string): string
    \endcode
    Returns the last component of \c filePath, that is, everything after the
    last '/' character.

    \section2 fromWindowsSeparators
    \code
    FileInfo.fromWindowsSeparators(filePath: string): string
    \endcode
    Returns \c filePath with all '\\' characters replaced by '/'.

    \section2 isAbsolutePath
    \code
    FileInfo.isAbsolutePath(filePath: string, hostOS?: string[]): boolean
    \endcode
    Returns true if \c filePath is an absolute path and false if it is a relative one.
    If \c hostOS is specified, treats \c filePath as a file path of the kind found on that platform.
    This parameter defaults to the host OS on which \QBS is running and should normally be omitted.

    \section2 joinPaths
    \code
    FileInfo.joinPaths(...paths: string[]): string
    \endcode
    Concatenates the given paths using the '/' character.

    \section2 path
    \code
    FileInfo.path(filePath: string, hostOS?: string[]): string
    \endcode
    Returns the part of \c filePath that is not the file name, that is,
    everything up to
    (but not including) the last '/' character. If \c filePath is just a file name, then '.'
    is returned. If \c filePath ends with a '/' character, then the file name is assumed to be empty
    for the purpose of the above definition.
    If \c hostOS is specified, treats \c filePath as a file path of the kind found on that platform.
    This parameter defaults to the host OS on which \QBS is running and should normally be omitted.

    \section2 relativePath
    \code
    FileInfo.relativePath(dirPath: string, filePath: string): string
    \endcode
    Returns a relative path so that joining \c dirPath and the returned path results in \c filePath.
    If necessary, '..' components are inserted.
    The function assumes \c dirPath and \c filePath to be absolute paths and \c dirPath to
    be a directory.

    \section2 toWindowsSeparators
    \code
    FileInfo.toWindowsSeparators(filePath: string): string
    \endcode
    Returns \c filePath with all '/' characters replaced by '\\'.
*/
