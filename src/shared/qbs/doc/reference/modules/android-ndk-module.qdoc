/****************************************************************************
**
** Copyright (C) 2016 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of Qbs.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \contentspage index.html
    \page android-ndk-module.html
    \ingroup list-of-modules

    \title Module Android.ndk
    \since 1.4
    \brief Provides support for building native Android libraries.

    The \c Android.ndk module contains the properties and rules to create native libraries
    for use in \l{AndroidApk Item}{Android application packages}.

    Normally, you will not use this module directly, but instead work
    with the \l{DynamicLibrary Item}{DynamicLibrary} and \l{StaticLibrary Item}{StaticLibrary}
    items that \QBS provides.
    Here is what the project file for the "hello-jni" example that comes with the NDK could look
    like:
    \code
        import qbs

        Project {
            DynamicLibrary {
                name: "hello-jni"
                qbs.architectures: ["mips", "x86"]
                files: ["jni/hello-jni.c"]
            }

            AndroidApk {
                name: "HelloJni"
                packageName: "com.example.hellojni"
                Depends { productTypes: ["android.nativelibrary"] }
            }
        }
    \endcode

    \section1 Android.ndk Properties

    These properties are set automatically when creating an Android profile via the
    \c setup-android tool.

    \table
    \header
        \li Property
        \li Type
        \li Since
        \li Default
        \li Description
    \row
        \li abi
        \li string
        \li 1.4
        \li undefined
        \li The ABI name as it appears under "lib/" in the application package.
            Corresponds to APP_ABI in Android.mk.
    \row
        \li appStl
        \li string
        \li 1.4
        \li \c{"system"}
        \li The library to use for C++. The possible values are: "system", "gabi++_static",
            "gabi++_shared", "stlport_static", "stlport_shared", "gnustl_static", "gnustl_shared",
            "c++_static", "c++_shared".
    \row
        \li ndkDir
        \li path
        \li 1.4
        \li undefined
        \li The NDK base directory.
    \row
        \li platform
        \li string
        \li 1.4
        \li \c{"android-9"}
        \li The versioned platform name.
    \endtable

    \section1 Relevant File Tags

    \table
    \header
        \li Tag
        \li Since
        \li Description
    \row
        \li \c{"android.nativelibrary"}
        \li 1.4.0
        \li This tag is attached to dynamic libraries that will end up in APK packages.
            You do not normally need to use the tag explicitly, as it is the default type of the
            \l {DynamicLibrary Item}{DynamicLibrary} item for Android targets.
    \endtable

*/
