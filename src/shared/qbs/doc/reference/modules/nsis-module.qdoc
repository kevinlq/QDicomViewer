/****************************************************************************
**
** Copyright (C) 2016 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of Qbs.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \contentspage index.html
    \page nsis-module.html
    \ingroup list-of-modules

    \title Module nsis
    \since 1.2
    \brief Provides Nullsoft Scriptable Install System support.

    The \c nsis module contains properties and rules for building EXE installers
    for Windows using the Nullsoft Scriptable Install System.

    This module is available on all platforms.

    \note A typical NSIS script includes an OutFile command to set the filename of the generated
    installer executable. However, \QBS overrides any OutFile commands found in the script, and
    therefore, you must use the targetName property to set the filename.

    \section1 General Properties

    \table
    \header
        \li Property
        \li Type
        \li Since
        \li Default
        \li Description
    \row
        \li defines
        \li stringList
        \li 1.2
        \li \c{undefined}
        \li List of preprocessor macros that get passed to the compiler.
            To set macro values, use the following syntax:
            \c{cpp.defines: ["USE_COLORS=1", 'COLOR_STR="blanched almond"']}
    \row
        \li disableConfig
        \li bool
        \li 1.2
        \li \c{false}
        \li Whether to disable inclusion of nsisconf.nsh.
            Generally you do not need to set this property.
    \row
        \li enableQbsDefines
        \li bool
        \li 1.2
        \li \c{true}
        \li Whether to define preprocessor macros corresponding to values from the project and
            product objects. When building a 64-bit package, the preprocessor variable \c{Win64}
            will also be defined.
    \row
        \li warningLevel
        \li string
        \li 1.2
        \li \c{"normal"}
        \li Severity of warnings to emit. The higher the level, the more warnings will be shown.
            The levels \c{none}, \c{errors}, \c{warnings}, \c{info} and \c{all} correspond to NSIS
            verbosity levels 0 through 4, inclusive. \c{normal} corresponds to the default level.
    \row
        \li compilerFlags
        \li stringList
        \li 1.2
        \li undefined
        \li Additional flags for the NSIS compiler.
    \row
        \li compressor
        \li string
        \li 1.2
        \li \c{"default"}
        \li Compression algorithm used to compress files and data in the installer.
            Setting this property overrides any SetCompressor command in the NSI file being
            compiled. Possible values include: \c{"default"}, \c{"zlib"}, \c{"zlib-solid"},
            \c{"bzip2"}, \c{"bzip2-solid"}, \c{"lzma"}, \c{"lzma-solid"}
    \row
        \li version
        \li string
        \li 1.2
        \li \c{undefined}
        \li The NSIS version. Consists of four numbers separated by dots, for instance "2.46.0.0".
    \row
        \li versionMajor
        \li int
        \li 1.2
        \li \c{versionParts[0]}
        \li The NSIS major version.
    \row
        \li versionMinor
        \li int
        \li 1.2
        \li \c{versionParts[1]}
        \li The NSIS minor version.
    \row
        \li versionParts
        \li list
        \li 1.2
        \li \c{empty}
        \li The NSIS version as a list. For instance, NSIS version 2.46.0.0 would correspond to a
            value of \c[2, 46, 0, 0].
    \row
        \li versionPatch
        \li int
        \li 1.2
        \li \c{versionParts[2]}
        \li The NSIS patch level.
    \row
        \li versionBuild
        \li int
        \li 1.2
        \li \c{versionParts[3]}
        \li The fourth NSIS version number component.
    \row
        \li toolchainInstallPath
        \li path
        \li 1.2
        \li determined automatically
        \li NSIS installation directory. Determined by searching known registry keys and known
            installation paths until a match is found. This should not normally need to be changed.
    \row
        \li compilerName
        \li string
        \li 1.2
        \li \c{"makensis"}
        \li Name of the compiler binary. This should not normally need to be changed.
    \row
        \li compilerPath
        \li string
        \li 1.2
        \li \c{compilerName}
        \li Directory where the compiler binary is located. This should not normally need to be
            changed.
    \endtable

    \section1 Relevant File Tags

    \table
    \header
        \li Tag
        \li Auto-tagged File Names
        \li Since
        \li Description
    \row
        \li \c{"nsh"}
        \li \c{*.nsh}
        \li 1.2
        \li This tag is attached to NSIS header files.
    \row
        \li \c{"nsi"}
        \li \c{*.nsi}
        \li 1.2
        \li This tag is attached to NSIS script files.
    \row
        \li \c{"nsissetup"}
        \li -
        \li 1.2
        \li The rule that creates the NSIS setup executable attaches this tag to its output
            artifact.
    \endtable
*/
